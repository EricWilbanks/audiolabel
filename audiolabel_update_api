#!/usr/bin/env python

import sys
import shutil

def update_line(line):
    '''Perform substitutions on a line.'''
    line = line.replace('t1()', 't1')
    line = line.replace('t2()', 't2')
    line = line.replace('duration()', 'duration')
    line = line.replace('center()', 'center')
    line = line.replace('names()', 'names')
    if line.find('Label(') >= 0:
        sys.stdout.write('The parameter order when creating a Label() object '
                         'has changed. Inspect your script to verify '
                         'parameter order.')
    if line.find('first()') >= 0:
        sys.stdout.write('The first() LabelTier method has been removed.')
    if line.find('last()') >= 0:
        sys.stdout.write('The last() LabelTier method has been removed.')
    line = line.replace('labelAt', 'label_at')
    line = line.replace('scaleBy', 'scale_by')
    line = line.replace('shiftBy', 'shift_by')
    line = line.replace('returnMatch', 'return_match')
    line = line.replace('fromFile', 'from_file')
    line = line.replace('fromType', 'from_type')
    line = line.replace('castTo', 'cast_to')
    line = line.replace('shiftLabels', 'shift_labels')
    line = line.replace('labelsAt', 'labels_at')
    line = line.replace('readPraatLong', 'read_praat_long')
    line = line.replace('readPraatShort', 'read_praat_short')
    line = line.replace('readPraat', 'read_praat')
    line = line.replace('readESPS', 'read_esps')
    line = line.replace('readWavesurfer', 'read_wavesurfer')
    line = line.replace('readTable', 'read_table')
    line = line.replace('fieldsInHead', 'fields_in_head')
    line = line.replace('t1Col', 't1_col')
    line = line.replace('t2Col', 't2_col')
    line = line.replace('skipN', 'skiplines')
    line = line.replace('_asString', '_as_string')
    return line

def main(fname):
    '''Update to the new audiolabel API.'''
    newname = "{fname}.new".format(fname=fname)
    bakname = "{fname}.bak".format(fname=fname)
    with open(newname, 'w') as w:
        with open(fname, 'rb') as f:
            for line in f.readlines():
                w.write(update_line(line))
    shutil.copyfile(fname, bakname)
    shutil.copyfile(newname, fname)
    

if __name__ == '__main__':
    main(sys.argv[1])
